{
  "root": true,
  // Configuration for JavaScript files
  "extends": ["airbnb-base", "plugin:prettier/recommended", "mdcs"],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ]
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "plugins": [
        "@typescript-eslint",
        "unused-imports",
        "simple-import-sort",
        "eslint-plugin-better-styled-components",
        "eslint-plugin-jsx-a11y",
        "eslint-plugin-prettier",
        "eslint-plugin-react",
        "eslint-plugin-react-hooks",
        "eslint-plugin-simple-import-sort",
        "eslint-plugin-unused-imports"
      ],
      "extends": [
        "airbnb-typescript",
        "plugin:@typescript-eslint/recommended",
        "plugin:prettier/recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json",
        "ecmaVersion": 2023,
        "sourceType": "module",
        "ecmaFeatures": {
          // Allows for the parsing of JSX
          "jsx": true
        }
      },
      "settings": {
        "react": {
          "version": "detect"
        }
      },
      "rules": {
        "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/no-shadow": "warn", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "@typescript-eslint/no-unused-vars": "off",
        "no-plusplus": ["error", { "allowForLoopAfterthoughts": true }],
        "import/extensions": "off",
        "import/no-extraneous-dependencies": "off", // Allow importing devDependencies
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "no-nested-ternary": "warn",
        "no-param-reassign": ["error", { "props": false }],
        "no-restricted-imports": [
          "error",
          {
            "paths": [
              {
                "name": "ethers",
                "message": "Please import from '@ethersproject/module' directly to support tree-shaking."
              },
              {
                "name": "styled-components",
                "message": "Please import from styled-components/macro."
              }
            ],
            "patterns": [
              {
                "group": ["**/dist"],
                "message": "Do not import from dist/ - this is an implementation detail, and breaks tree-shaking."
              },
              {
                "group": ["!styled-components/macro"]
              }
            ]
          }
        ],
        "object-shorthand": ["error", "always"],
        "prettier/prettier": [
          "error",
          {
            "singleQuote": true,
            "endOfLine": "auto"
          }
        ],
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/react-in-jsx-scope": "off",
        "react-hooks/exhaustive-deps": "warn",
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": ["warn", { "argsIgnorePattern": "^_" }],
        "react/no-unknown-property": ["error", { "ignore": ["attach", "args", "map"] }]
      }
    }
  ]
}
